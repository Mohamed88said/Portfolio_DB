# Generated by Django 4.2.16 on 2025-09-12 08:52

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('portfolio', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner_name', models.CharField(max_length=200, verbose_name='Nom du partenaire')),
                ('partner_logo', models.ImageField(blank=True, upload_to='collaborations/', verbose_name='Logo du partenaire')),
                ('collaboration_type', models.CharField(choices=[('client', 'Client'), ('partner', 'Partenaire'), ('employer', 'Employeur'), ('mentor', 'Mentor'), ('mentee', 'Mentoré'), ('contributor', 'Contributeur')], max_length=50, verbose_name='Type de collaboration')),
                ('description', models.TextField(verbose_name='Description')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('is_ongoing', models.BooleanField(default=False, verbose_name='En cours')),
                ('website', models.URLField(blank=True, verbose_name='Site web')),
                ('testimonial', models.TextField(blank=True, verbose_name='Témoignage')),
            ],
            options={
                'verbose_name': 'Collaboration',
                'verbose_name_plural': 'Collaborations',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=300, verbose_name='Question')),
                ('answer', models.TextField(verbose_name='Réponse')),
                ('category', models.CharField(choices=[('general', 'Général'), ('services', 'Services'), ('pricing', 'Tarifs'), ('technical', 'Technique'), ('process', 'Processus')], default='general', max_length=50, verbose_name='Catégorie')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordre')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de vues')),
                ('helpful_votes', models.PositiveIntegerField(default=0, verbose_name='Votes utiles')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQ',
                'ordering': ['category', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description')),
                ('file', models.FileField(upload_to='resources/', verbose_name='Fichier')),
                ('file_type', models.CharField(choices=[('pdf', 'PDF'), ('doc', 'Document'), ('image', 'Image'), ('video', 'Vidéo'), ('code', 'Code'), ('other', 'Autre')], max_length=20, verbose_name='Type de fichier')),
                ('category', models.CharField(choices=[('cv', 'CV/Résumé'), ('portfolio', 'Portfolio'), ('template', 'Template'), ('guide', 'Guide'), ('presentation', 'Présentation'), ('other', 'Autre')], max_length=50, verbose_name='Catégorie')),
                ('is_public', models.BooleanField(default=True, verbose_name='Public')),
                ('download_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de téléchargements')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Taille du fichier (bytes)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Ressource',
                'verbose_name_plural': 'Ressources',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SearchQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=200, verbose_name='Requête')),
                ('results_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de résultats')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Adresse IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('search_date', models.DateTimeField(auto_now_add=True)),
                ('clicked_result', models.CharField(blank=True, max_length=200, verbose_name='Résultat cliqué')),
            ],
            options={
                'verbose_name': 'Requête de recherche',
                'verbose_name_plural': 'Requêtes de recherche',
                'ordering': ['-search_date'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nom')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('color', models.CharField(default='#007bff', max_length=7, verbose_name='Couleur')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('usage_count', models.PositiveIntegerField(default=0, verbose_name="Nombre d'utilisations")),
                ('is_featured', models.BooleanField(default=False, verbose_name='Tag vedette')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['-usage_count', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Timeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description')),
                ('date', models.DateField(verbose_name='Date')),
                ('category', models.CharField(choices=[('education', 'Formation'), ('career', 'Carrière'), ('project', 'Projet'), ('achievement', 'Réalisation'), ('personal', 'Personnel')], max_length=50, verbose_name='Catégorie')),
                ('icon', models.CharField(default='fas fa-calendar', max_length=50, verbose_name='Icône')),
                ('color', models.CharField(default='#007bff', max_length=7, verbose_name='Couleur')),
                ('is_milestone', models.BooleanField(default=False, verbose_name='Étape importante')),
                ('image', models.ImageField(blank=True, upload_to='timeline/', verbose_name='Image')),
                ('link', models.URLField(blank=True, verbose_name='Lien')),
            ],
            options={
                'verbose_name': 'Événement Timeline',
                'verbose_name_plural': 'Timeline',
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='preferred_contact_method',
            field=models.CharField(choices=[('email', 'Email'), ('phone', 'Téléphone'), ('linkedin', 'LinkedIn')], default='email', max_length=20, verbose_name='Méthode de contact préférée'),
        ),
        migrations.AddField(
            model_name='profile',
            name='timezone',
            field=models.CharField(default='Europe/Paris', max_length=50, verbose_name='Fuseau horaire'),
        ),
        migrations.AddField(
            model_name='profile',
            name='work_hours_end',
            field=models.TimeField(blank=True, null=True, verbose_name='Fin heures de travail'),
        ),
        migrations.AddField(
            model_name='profile',
            name='work_hours_start',
            field=models.TimeField(blank=True, null=True, verbose_name='Début heures de travail'),
        ),
        migrations.AddField(
            model_name='profile',
            name='work_preference',
            field=models.CharField(choices=[('busy', 'Occupé'), ('not_available', 'Non disponible')], default='available', max_length=20, verbose_name='Préférence de travail'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='availability_status',
            field=models.CharField(choices=[('available', 'Disponible'), ('partially_available', 'Partiellement disponible'), ('busy', 'Occupé'), ('not_available', 'Non disponible')], default='available', max_length=20, verbose_name='Statut de disponibilité'),
        ),
        migrations.CreateModel(
            name='Analytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('page_views', models.PositiveIntegerField(default=0, verbose_name='Vues de page')),
                ('unique_visitors', models.PositiveIntegerField(default=0, verbose_name='Visiteurs uniques')),
                ('bounce_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Taux de rebond')),
                ('avg_session_duration', models.DurationField(blank=True, null=True, verbose_name='Durée moyenne de session')),
                ('top_pages', models.JSONField(default=dict, verbose_name='Pages populaires')),
                ('referrers', models.JSONField(default=dict, verbose_name='Référents')),
                ('devices', models.JSONField(default=dict, verbose_name='Appareils')),
                ('countries', models.JSONField(default=dict, verbose_name='Pays')),
            ],
            options={
                'verbose_name': 'Analytics',
                'verbose_name_plural': 'Analytics',
                'ordering': ['-date'],
                'unique_together': {('date',)},
            },
        ),
        migrations.AddField(
            model_name='blogpost',
            name='tags_new',
            field=models.ManyToManyField(blank=True, to='portfolio.tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='experience',
            name='tags',
            field=models.ManyToManyField(blank=True, to='portfolio.tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='project',
            name='tags',
            field=models.ManyToManyField(blank=True, to='portfolio.tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='skill',
            name='tags',
            field=models.ManyToManyField(blank=True, to='portfolio.tag', verbose_name='Tags'),
        ),
    ]
